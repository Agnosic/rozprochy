#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'camera_types'


module Rotate
  LEFT = 1
  RIGHT = 2
  UP = 3
  DOWN = 4
  VALUE_MAP = {1 => "LEFT", 2 => "RIGHT", 3 => "UP", 4 => "DOWN"}
  VALID_VALUES = Set.new([LEFT, RIGHT, UP, DOWN]).freeze
end

module Zoom
  IN = 1
  OUT = 2
  VALUE_MAP = {1 => "IN", 2 => "OUT"}
  VALID_VALUES = Set.new([IN, OUT]).freeze
end

class ZoomException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  def initialize(message=nil)
    super()
    self.why = message
  end

  def message; why end

  WHY = 1

  FIELDS = {
    WHY => {:type => ::Thrift::Types::STRING, :name => 'why'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class RotateException < ::Thrift::Exception
  include ::Thrift::Struct, ::Thrift::Struct_Union
  def initialize(message=nil)
    super()
    self.why = message
  end

  def message; why end

  WHY = 1

  FIELDS = {
    WHY => {:type => ::Thrift::Types::STRING, :name => 'why'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

