#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'device_service'
require 'camera_types'

module Camera
  class Client < ::DeviceService::Client 
    include ::Thrift::Client

    def getPicture()
      send_getPicture()
      return recv_getPicture()
    end

    def send_getPicture()
      send_message('getPicture', GetPicture_args)
    end

    def recv_getPicture()
      result = receive_message(GetPicture_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'getPicture failed: unknown result')
    end

  end

  class Processor < ::DeviceService::Processor 
    include ::Thrift::Processor

    def process_getPicture(seqid, iprot, oprot)
      args = read_args(iprot, GetPicture_args)
      result = GetPicture_result.new()
      result.success = @handler.getPicture()
      write_result(result, oprot, 'getPicture', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class GetPicture_args
    include ::Thrift::Struct, ::Thrift::Struct_Union

    FIELDS = {

    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetPicture_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRING, :name => 'success', :binary => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

